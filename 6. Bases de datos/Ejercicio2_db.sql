CREATE SCHEMA IF NOT EXISTS biblioteca_db;
USE biblioteca_db;

CREATE TABLE IF NOT EXISTS libro (
idLibro INT AUTO_INCREMENT PRIMARY KEY,
titulo VARCHAR(255) NOT NULL,
editorial VARCHAR(255) NOT NULL,
area VARCHAR(255) NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS autor (
idAutor INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(255) NOT NULL,
nacionalidad VARCHAR(255) NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS estudiante (
idLector INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(255) NOT NULL,
apellido VARCHAR(255) NOT NULL,
direccion VARCHAR(255) NOT NULL,
carrera VARCHAR(255) NOT NULL,
edad INT NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

/*
En "devuelto" agregue que sea un INT para que sea un true(1) o false(0).
*/
CREATE TABLE IF NOT EXISTS prestamo (
id INT AUTO_INCREMENT PRIMARY KEY,
fechaPrestamo DATE NOT NULL,
fechaDevolucion DATE NOT NULL,
devuelto INT(1) NOT NULL,
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
idLibro INT NOT NULL,
FOREIGN KEY (idLibro) REFERENCES libro(idLibro) ON UPDATE CASCADE ON DELETE CASCADE,
idLector INT NOT NULL,
FOREIGN KEY (idLector) REFERENCES estudiante(idLector) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS libroautor (
idLibro INT NOT NULL,
FOREIGN KEY (idLibro) REFERENCES libro(idLibro) ON UPDATE CASCADE ON DELETE CASCADE,
idLector INT NOT NULL,
FOREIGN KEY (idLector) REFERENCES estudiante(idLector) ON UPDATE CASCADE ON DELETE CASCADE
);